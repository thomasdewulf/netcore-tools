name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64 
          
      - name: Setup .NET Core @ Latest
        uses: actions/setup-dotnet@v1
        with:
          source-url: https://nuget.pkg.github.com/thomasdewulf/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
               
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.4
        with:
          versionSpec: '5.3.x'
          
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.4

        
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir ./.sonar
          mkdir ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
  
      - name: Prepare SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"thomasdewulf_netcore-tools" /o:"thomasdewulf" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="/**/coverage.opencover.xml" 
     
      - name: Build
        run: dotnet build --configuration Release
        
      - name: Test
        run: dotnet test --collect "XPlat Code Coverage" --settings "ThomasDeWulf.Tools.Tests/runsettings.xml"

      - name: Publish SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        
      - name: Create Release
        id: create_release
        if: contains(github.ref, 'master')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: "v${{ steps.gitversion.outputs.fullSemVer }}"
          release_name: Release ${{ steps.gitversion.outputs.fullSemVer }}
          draft: false
          prerelease: false

      - name: Pack
        if: contains(github.ref, 'master')
        run: dotnet pack --output ./artifacts --configuration Release -p:Version=${{ steps.gitversion.outputs.fullSemVer }}
              
      - name: Publish packages
        if: contains(github.ref, 'master')
        run: dotnet nuget push "./artifacts/**.nupkg" --skip-duplicate --no-symbols true
